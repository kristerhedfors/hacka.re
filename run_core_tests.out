======================================
üß™ CORE TESTS STARTING
======================================

üìÅ TEST ARTIFACTS WILL BE STORED IN:
  üì∏ Screenshots: /Users/user/dev/hacka.re/_tests/playwright/screenshots/
  üìù Metadata: /Users/user/dev/hacka.re/_tests/playwright/screenshots_data/
  üñ•Ô∏è Console logs: /Users/user/dev/hacka.re/_tests/playwright/console_logs/
  üìä Test output: /Users/user/dev/hacka.re/_tests/playwright/run_core_tests.out

üí° TIP: Run ./show_test_artifacts.sh to see all artifacts
======================================

Starting HTTP server for tests...
===== Starting HTTP Server for hacka.re Tests =====
Port: 8000
Project Root: /Users/user/dev/hacka.re
==================================================
Checking for existing HTTP server processes on port 8000...
Found existing processes: 22038
Killing existing processes...
Processes killed.
Changing to project root directory: /Users/user/dev/hacka.re
Starting Python HTTP server on port 8000...
Server started successfully with PID: 23493
Server is now running at http://localhost:8000
Server PID saved to: /Users/user/dev/hacka.re/_tests/playwright/server_pid.txt
==================================================
Server is ready. You can now run your tests.
To stop the server, run: kill -9 $(cat /Users/user/dev/hacka.re/_tests/playwright/server_pid.txt)
==================================================
Running Core Functionality tests with chromium browser...
Test filter: test_page or test_api or test_chat or test_welcome_modal

============================= test session starts ==============================
platform darwin -- Python 3.13.3, pytest-8.3.5, pluggy-1.5.0 -- /Users/user/dev/hacka.re/_tests/playwright/.venv/bin/python
cachedir: .pytest_cache
rootdir: /Users/user/dev/hacka.re/_tests/playwright
configfile: pytest.ini
testpaths: .
plugins: playwright-0.7.0, base-url-2.1.0
collecting ... collected 918 items / 880 deselected / 38 selected

shodan/test_shodan_account_apis.py::TestShodanAPIInfo::test_api_info[chromium0] PASSED [  2%]
shodan/test_shodan_account_apis.py::TestShodanAPIInfo::test_api_plan_details[chromium0] PASSED [  5%]
test_api.py::test_api_key_configuration[chromium0] PASSED                [  7%]
test_api.py::test_model_selection[chromium0] SKIPPED (No valid model...) [ 10%]
test_api_key_detection_simple.py::test_api_key_detection_simple[chromium0] PASSED [ 13%]
test_api_key_enter.py::test_api_key_modal_enter_key[chromium0] PASSED    [ 15%]
test_api_key_persistence_debug.py::test_api_key_persistence_scenario_1_basic[chromium0] PASSED [ 18%]
test_api_key_persistence_debug.py::test_api_key_persistence_scenario_2_retry_helper[chromium0] PASSED [ 21%]
test_api_key_persistence_debug.py::test_api_key_persistence_scenario_3_multiple_attempts[chromium0] PASSED [ 23%]
test_api_key_persistence_debug.py::test_api_key_persistence_scenario_4_timing_analysis[chromium0] PASSED [ 26%]
test_chat.py::test_chat_message_send_receive[chromium0] FAILED           [ 28%]
test_chat_no_mock.py::test_chat_message_send_receive[chromium0] SKIPPED  [ 31%]
test_page.py::test_page_loads[chromium0] PASSED                          [ 34%]
test_page.py::test_chat_interface_elements[chromium0] PASSED             [ 36%]
test_stop_generation_simple.py::test_chat_manager_stop_logic[chromium0] PASSED [ 39%]
test_welcome_modal_new_logic.py::test_welcome_modal_shows_for_first_time_user[chromium0] PASSED [ 42%]
test_welcome_modal_new_logic.py::test_welcome_modal_hidden_for_returning_user[chromium0] PASSED [ 44%]
test_welcome_modal_new_logic.py::test_welcome_modal_disabled_with_url_param[chromium0] PASSED [ 47%]
test_welcome_modal_new_logic.py::test_no_auto_settings_after_welcome[chromium0] PASSED [ 50%]
shodan/test_shodan_account_apis.py::TestShodanAPIInfo::test_api_info[chromium1] PASSED [ 52%]
shodan/test_shodan_account_apis.py::TestShodanAPIInfo::test_api_plan_details[chromium1] PASSED [ 55%]
test_api.py::test_api_key_configuration[chromium1] PASSED                [ 57%]
test_api.py::test_model_selection[chromium1] PASSED                      [ 60%]
test_api_key_detection_simple.py::test_api_key_detection_simple[chromium1] PASSED [ 63%]
test_api_key_enter.py::test_api_key_modal_enter_key[chromium1] PASSED    [ 65%]
test_api_key_persistence_debug.py::test_api_key_persistence_scenario_1_basic[chromium1] PASSED [ 68%]
test_api_key_persistence_debug.py::test_api_key_persistence_scenario_2_retry_helper[chromium1] PASSED [ 71%]
test_api_key_persistence_debug.py::test_api_key_persistence_scenario_3_multiple_attempts[chromium1] PASSED [ 73%]
test_api_key_persistence_debug.py::test_api_key_persistence_scenario_4_timing_analysis[chromium1] PASSED [ 76%]
test_chat.py::test_chat_message_send_receive[chromium1] SKIPPED (No ...) [ 78%]
test_chat_no_mock.py::test_chat_message_send_receive[chromium1] SKIPPED  [ 81%]
test_page.py::test_page_loads[chromium1] PASSED                          [ 84%]
test_page.py::test_chat_interface_elements[chromium1] PASSED             [ 86%]
test_stop_generation_simple.py::test_chat_manager_stop_logic[chromium1] PASSED [ 89%]
test_welcome_modal_new_logic.py::test_welcome_modal_shows_for_first_time_user[chromium1] PASSED [ 92%]
test_welcome_modal_new_logic.py::test_welcome_modal_hidden_for_returning_user[chromium1] PASSED [ 94%]
test_welcome_modal_new_logic.py::test_welcome_modal_disabled_with_url_param[chromium1] PASSED [ 97%]
test_welcome_modal_new_logic.py::test_no_auto_settings_after_welcome[chromium1] PASSED [100%]

=================================== FAILURES ===================================
__________________ test_chat_message_send_receive[chromium0] ___________________

page = <Page url='http://localhost:8000/'>
serve_hacka_re = 'http://localhost:8000'

    def test_chat_message_send_receive(page: Page, serve_hacka_re):
        """Test sending a message and receiving a response with real API."""
        # Navigate to the application
        page.goto(serve_hacka_re)
    
        # Configure API key and model first
        # Dismiss welcome modal if present
        dismiss_welcome_modal(page)
    
        # Dismiss settings modal if already open
        # Click the settings button
        settings_button = page.locator("#settings-btn")
        settings_button.click(timeout=2000)
    
        # Wait for the settings modal to become visible
        page.wait_for_selector("#settings-modal.active", state="visible", timeout=2000)
    
        # Enter the OpenAI API key from .env
        api_key_input = page.locator("#api-key-update")
        api_key_input.fill(API_KEY)
    
        # Select OpenAI as the API provider
        base_url_select = page.locator("#base-url-select")
        base_url_select.select_option("openai")
    
        # Wait for the reload button to be enabled after API key is entered
        reload_button = page.locator("#model-reload-btn")
        try:
            # Wait for button to be enabled
            page.wait_for_function(
                """() => {
                    const btn = document.getElementById('model-reload-btn');
                    return btn && !btn.disabled;
                }""",
                timeout=3000
            )
            reload_button.click(timeout=5000)
        except Exception as e:
            print(f"Reload button not enabled, trying to close and re-open settings: {e}")
            # Settings auto-save, so just close and re-open
            close_button = page.locator("#close-settings")
            if close_button.is_visible():
                close_button.click()
                page.wait_for_timeout(500)
                # Re-open settings
                settings_button = page.locator("#settings-btn")
                settings_button.click(timeout=2000)
                page.wait_for_selector("#settings-modal.active", state="visible", timeout=2000)
                # Now try reload again
                reload_button.click(timeout=5000)
    
        # Wait for the models to be loaded
        # First, check if the model select has any non-disabled options
        try:
            page.wait_for_selector("#model-select option:not([disabled])", state="visible", timeout=2000)
            print("Models loaded successfully")
        except Exception as e:
            print(f"Error waiting for models to load: {e}")
            # Force a shorter wait time        # Check if there are any options in the model select
            options_count = page.evaluate("""() => {
                const select = document.getElementById('model-select');
                if (!select) return 0;
                return Array.from(select.options).filter(opt => !opt.disabled).length;
            }""")
            print(f"Found {options_count} non-disabled options in model select")
    
            if options_count == 0:
                # Try clicking the reload button again
                print("No options found, clicking reload button again")
>               reload_button.click(timeout=5000)    # Select the recommended test model

test_chat.py:83: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.13/site-packages/playwright/sync_api/_generated.py:15512: in click
    self._sync(
.venv/lib/python3.13/site-packages/playwright/_impl/_locator.py:160: in click
    return await self._frame.click(self._selector, strict=True, **params)
.venv/lib/python3.13/site-packages/playwright/_impl/_frame.py:488: in click
    await self._channel.send("click", locals_to_params(locals()))
.venv/lib/python3.13/site-packages/playwright/_impl/_connection.py:61: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x1036878c0>
cb = <function Channel.send.<locals>.<lambda> at 0x103e5dda0>
is_internal = False

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(task, "__pw_stack__", inspect.stack())
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.TimeoutError: Locator.click: Timeout 5000ms exceeded.
E           Call log:
E             - waiting for locator("#model-reload-btn")
E               - locator resolved to <button disabled type="button" class="icon-btn" id="model-reload-btn" title="Reload models from API">‚Ä¶</button>
E             - attempting click action
E               2 √ó waiting for element to be visible, enabled and stable
E                 - element is not enabled
E               - retrying click action
E               - waiting 20ms
E               2 √ó waiting for element to be visible, enabled and stable
E                 - element is not enabled
E               - retrying click action
E                 - waiting 100ms
E               9 √ó waiting for element to be visible, enabled and stable
E                 - element is not enabled
E               - retrying click action
E                 - waiting 500ms
E               - waiting for element to be visible, enabled and stable
E               - element is visible, enabled and stable
E               - scrolling into view if needed
E               - done scrolling
E               - performing click action

.venv/lib/python3.13/site-packages/playwright/_impl/_connection.py:528: TimeoutError
----------------------------- Captured stdout call -----------------------------
welcome-modal is visible, closing it
Found close button with selector: #close-welcome-modal
Clicked close button
Modal closed successfully
Error waiting for models to load: Page.wait_for_selector: Timeout 2000ms exceeded.
Call log:
  - waiting for locator("#model-select option:not([disabled])") to be visible

Found 0 non-disabled options in model select
No options found, clicking reload button again
--------------------------- Captured stdout teardown ---------------------------
HTTP server process already terminated
=============================== warnings summary ===============================
test_complete_mcp_share_flow.py:8
  /Users/user/dev/hacka.re/_tests/playwright/test_complete_mcp_share_flow.py:8: PytestUnknownMarkWarning: Unknown pytest.mark.feature_test - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.feature_test

test_cross_tab_loop_fix.py:8
  /Users/user/dev/hacka.re/_tests/playwright/test_cross_tab_loop_fix.py:8: PytestUnknownMarkWarning: Unknown pytest.mark.feature_test - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.feature_test

test_cross_tab_sync_optimization.py:7
  /Users/user/dev/hacka.re/_tests/playwright/test_cross_tab_sync_optimization.py:7: PytestUnknownMarkWarning: Unknown pytest.mark.feature_test - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.feature_test

test_cross_tab_sync_optimization.py:59
  /Users/user/dev/hacka.re/_tests/playwright/test_cross_tab_sync_optimization.py:59: PytestUnknownMarkWarning: Unknown pytest.mark.feature_test - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.feature_test

test_debug_utils.py:25
  /Users/user/dev/hacka.re/_tests/playwright/test_debug_utils.py:25: PytestCollectionWarning: cannot collect test class 'TestDebugger' because it has a __init__ constructor (from: test_debug_utils.py)
    class TestDebugger:

test_debug_utils.py:25
  /Users/user/dev/hacka.re/_tests/playwright/test_debug_utils.py:25: PytestCollectionWarning: cannot collect test class 'TestDebugger' because it has a __init__ constructor (from: test_example_with_debugging.py)
    class TestDebugger:

test_rag_multi_query.py:104
  /Users/user/dev/hacka.re/_tests/playwright/test_rag_multi_query.py:104: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.asyncio

test_rag_multi_query.py:375
  /Users/user/dev/hacka.re/_tests/playwright/test_rag_multi_query.py:375: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.asyncio

test_rag_similarity_scores.py:14
  /Users/user/dev/hacka.re/_tests/playwright/test_rag_similarity_scores.py:14: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.asyncio

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED test_chat.py::test_chat_message_send_receive[chromium0] - playwright._...
= 1 failed, 33 passed, 4 skipped, 880 deselected, 9 warnings in 370.77s (0:06:10) =
Generating test results markdown files...
No arguments provided. Using default files.
Processing default files...
Generating markdown report for 'test_output.log' -> 'test_results.md'...
Markdown report generated: test_results.md
You can view it with: glow -p test_results.md
Warning: Output file 'run_tests.out_bundle.md' is newer than input file 'run_tests.out'.
This suggests the bundle has already been generated for this test run.
To regenerate, delete 'run_tests.out_bundle.md' first.

All core test output, including any Ctrl+C interruptions, has been captured to run_core_tests.out
A bundled markdown report has been generated at run_tests.out_bundle.md
You can view the markdown report with: glow -p run_tests.out_bundle.md
These files can be used by the coding assistant LLM to analyze test results
Stopping HTTP server...
===== Stopping HTTP Server for hacka.re Tests =====
Found server process with PID: 23493
Stopping server...
Server stopped.
Removed PID file: /Users/user/dev/hacka.re/_tests/playwright/server_pid.txt
==================================================
Server stopped.
