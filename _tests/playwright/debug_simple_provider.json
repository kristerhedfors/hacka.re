{
  "test_name": "simple_provider_debug",
  "timestamp": "2025-08-27 16:09:57",
  "states": {
    "initial": {
      "domValue": "openai",
      "sessionStorage": null,
      "localStorage": null,
      "dataService": null,
      "interceptedCalls": [],
      "timestamp": "2025-08-27T14:09:54.657Z"
    },
    "after_change": {
      "domValue": "groq",
      "sessionStorage": null,
      "localStorage": null,
      "dataService": null,
      "interceptedCalls": [
        {
          "method": "saveBaseUrlProvider",
          "provider": "groq",
          "timestamp": "2025-08-27T14:09:54.760Z"
        }
      ],
      "timestamp": "2025-08-27T14:09:55.812Z"
    },
    "after_close": {
      "domValue": "groq",
      "sessionStorage": null,
      "localStorage": null,
      "dataService": null,
      "interceptedCalls": [
        {
          "method": "saveBaseUrlProvider",
          "provider": "groq",
          "timestamp": "2025-08-27T14:09:54.760Z"
        }
      ],
      "timestamp": "2025-08-27T14:09:56.997Z"
    },
    "final": {
      "domValue": "groq",
      "sessionStorage": null,
      "localStorage": null,
      "dataService": null,
      "interceptedCalls": [
        {
          "method": "saveBaseUrlProvider",
          "provider": "groq",
          "timestamp": "2025-08-27T14:09:54.760Z"
        }
      ],
      "timestamp": "2025-08-27T14:09:57.591Z"
    }
  },
  "dataservice_calls": [
    {
      "method": "saveBaseUrlProvider",
      "provider": "groq",
      "timestamp": "2025-08-27T14:09:54.760Z"
    }
  ],
  "console_messages": [
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[StorageTypeService] Detected direct entry - using sessionStorage (LOCKED)"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPProviderFactory] Initialized (built-in providers will be registered by modules)"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPToolRegistry] Initialized enhanced tool registry"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "GitHub Provider: Starting initialization..."
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "GitHub Provider: All modules loaded successfully"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "GitHub Provider (modular) loaded and initialized successfully"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCP Client] Initialized successfully"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPServiceManager] Registered connector: github"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPServiceManager] Registered connector: shodan"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPServiceManager] Registered connector: gmail"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPServiceManager] Initialized with 3 connectors"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPServiceManager] Bridge created: MCPServiceConnectors -> mcpServiceManager"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\ud83c\udfbc AgentOrchestrator: Initializing multi-agent orchestration system"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\ud83c\udfbc AgentOrchestrator: AgentCache integration enabled"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Loading Code Section prompt..."
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Loaded 3 default prompts for RAG functionality"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Default prompts loaded: [Complete hacka.re Documentation, The urgency of interpretability, OWASP Top 10 for LLM Applications]"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Loaded 3 default function collections: [RC4 Encryption, Math Utilities, MCP Examples]"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "MCP Size Estimator: Global functions registered"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPQuickConnectors] Current window.location.origin: http://localhost:8000"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Initializing Orchestration Agent Service..."
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Orchestration Agent Service initialized"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "DefaultPromptsService.registerPrompt: Registered MCP prompt '\ud83d\udd17 Share Link MCP Guide'"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Initializing copy buttons"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Copy button event listener initialized"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Legacy Agent Manager utilities initialized (deprecated)"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPShareLinkUI] Initialized"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[DebugCodeTooltip] Initialized - Click to show tooltip"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\ud83d\ude80 AIHackare: Initializing model selection manager..."
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\ud83d\ude80 AIHackare: Initializing..."
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "No context window size found for model: "
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Empty default system prompt loaded successfully"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\ud83c\udfa4 VoiceControlManager: Starting fresh implementation"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "API Tools Manager initialized"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Function Modal Manager initialized"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Function Execute Modal initialized"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "MCP Server Manager initialized"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Function Editor Manager initialized with modular components"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Function Copy Manager initialized"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "=== Loading selected default functions ==="
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Selected function IDs from storage: []"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Loaded 0 individual default functions"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "All enabled functions after loading default functions: []"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Default functions loaded"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Function Calling Manager initialized with all components"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "PromptsService.applySelectedPromptsAsSystem called"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Prompts manager context usage update needed"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "System prompt updated, length: 0"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "System prompt applied via coordinator, has content: false"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "VectorRAGService: Initializing..."
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "VectorRAGService: Initialization completed"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "RAGManager: Initialized successfully"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\u2705 MCP checkbox event listener attached successfully"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "AIHackare: Generate share link button found, adding event listener"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\u2705 AIHackare: Initialization complete"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "System prompt updated, length: 0"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "SystemPromptCoordinator initialized"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPUIManager] Adding quick connectors to modal"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPQuickConnectors] Creating quick connectors UI JSHandle@node"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPQuickConnectors] Quick connectors placeholder found: true"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPQuickConnectors] Quick connectors section replaced placeholder"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPQuickConnectors] GitHub connection check: {isConnected: false, connector: true, connection: null, hasValidCredentials: false}"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPOAuthIntegration] Initialized"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPManager] OAuth integration initialized"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPManager] Attempting to initialize quick connectors"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPQuickConnectors] Initializing..."
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPQuickConnectors] Service availability check: {storageService: true, oauthConfig: true, oauthFlow: true, mcpClient: true}"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPQuickConnectors] GitHub connection check: {isConnected: false, connector: true, connection: null, hasValidCredentials: false}"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPQuickConnectors] Initialized successfully"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPManager] Quick connectors initialized"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPManager] Initialization complete"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Title and subtitle updated to: hacka.re - Free, open, f\u00f6r hackare av hackare"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPServiceManager] Loaded 0 stored connections"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPManager] Loaded service manager connections"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPQuickConnectors] GitHub connection check: {isConnected: false, connector: true, connection: null, hasValidCredentials: false}"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[MCPManager] Updated quick connectors status after restore"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "ASCII Tree Menu: Initializing..."
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "ASCII Tree Menu: Events bound"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "ModalEffects: Initializing"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "ModalEffects: Found 16 modals"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "ModalEffects: Setting up observer for modal 1"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "ModalEffects: Setting up observer for modal 2"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "ModalEffects: Setting up observer for modal 3"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "ModalEffects: Setting up observer for modal 4"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "ModalEffects: Setting up observer for modal 5"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "ModalEffects: Setting up observer for modal 6"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "ModalEffects: Setting up observer for modal 7"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "ModalEffects: Setting up observer for modal 8"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "ModalEffects: Setting up observer for modal 9"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "ModalEffects: Setting up observer for modal 10"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "ModalEffects: Setting up observer for modal 11"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "ModalEffects: Setting up observer for modal 12"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "ModalEffects: Setting up observer for modal 13"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "ModalEffects: Setting up observer for modal 14"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "ModalEffects: Setting up observer for modal 15"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "ModalEffects: Setting up observer for modal 16"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Highlight.js initialized successfully"
    },
    {
      "timestamp": "16:09:5",
      "type": "verbose",
      "text": "[DOM] Password field is not contained in a form: (More info: https://goo.gl/9p2vKq) %o"
    },
    {
      "timestamp": "16:09:5",
      "type": "verbose",
      "text": "[DOM] Input elements should have autocomplete attributes (suggested: \"new-password\"): (More info: https://goo.gl/9p2vKq) %o"
    },
    {
      "timestamp": "16:09:5",
      "type": "verbose",
      "text": "[DOM] Input elements should have autocomplete attributes (suggested: \"current-password\"): (More info: https://goo.gl/9p2vKq) %o"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\u2713 Migrated regulation from global variable: EU AI Act"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\u2713 Migrated regulation from global variable: DORA - Digital Operational Resilience Act"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\u2713 Migrated regulation from global variable: Cyber Resilience Act"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\u2713 Saved 3 regulations to encrypted storage"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\u2713 RAG Regulations Service initialized with encrypted storage"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\ud83d\udd27 UICoordinator: Attempting to initialize model selector manager..."
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\ud83d\udd27 UICoordinator: window.aiHackare available: true"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\ud83d\udd27 UICoordinator: First attempt failed, retrying in 500ms..."
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\ud83d\ude80 ModelSelectionManager initialized"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\u2705 AIHackare: ModelSelectionManager initialized"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\u2713 Migrated regulation from global variable: EU AI Act"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\u2713 Migrated regulation from global variable: DORA - Digital Operational Resilience Act"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\u2713 Migrated regulation from global variable: Cyber Resilience Act"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\u2713 Saved 3 regulations to encrypted storage"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\u2713 RAG Regulations Service initialized with encrypted storage"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Models.dev data loaded successfully from JS module"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Extracting functions with regex: (\\/\\*\\*[\\s\\S]*?\\*\\/\\s*)?(\\/\\/.*?(?:\\n\\s*|$))?(?:async\\s+)?function\\s+([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*\\(([^)]*)\\)\\s*{"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "DATASERVICE_INTERCEPTED: saveBaseUrlProvider method hooked"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Error getting DataService value: window.DataService.get is not a function"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "DATASERVICE_SAVE_PROVIDER: {\"method\":\"saveBaseUrlProvider\",\"provider\":\"groq\",\"timestamp\":\"2025-08-27T14:09:54.760Z\"}"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\ud83d\udd27 UICoordinator: Attempting to initialize model selector manager..."
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\ud83d\udd27 UICoordinator: window.aiHackare available: true"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\ud83d\udd27 UICoordinator: Second attempt failed, retrying in 1000ms..."
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[CrossTabSync] Initializing cross-tab synchronization..."
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "[CrossTabSync] Not using localStorage - cross-tab sync disabled"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\ud83d\ude80 ModelSelectionManager initialized"
    },
    {
      "timestamp": "16:09:5",
      "type": "warning",
      "text": "\u26a0\ufe0f RAG manager not found - will retry later"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Error getting DataService value: window.DataService.get is not a function"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\ud83d\udd27 UICoordinator: Attempting to initialize model selector manager..."
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "\ud83d\udd27 UICoordinator: window.aiHackare available: true"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "ModalEffects: All modals closed, removing modal-open class from body"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Error getting DataService value: window.DataService.get is not a function"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "ModalEffects: Modal opened, adding modal-open class to body"
    },
    {
      "timestamp": "16:09:5",
      "type": "log",
      "text": "Error getting DataService value: window.DataService.get is not a function"
    }
  ],
  "test_result": {
    "persistence_success": true,
    "storage_updated": false,
    "dataservice_called": true
  }
}